<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <base href="@Href("~")">
    <title> @ViewBag.Title</title>
    <link href="~/favicon.ico" rel="shortcut icon" type="image/x-icon" />
    <meta name="viewport" content="width=device-width" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="fontiran.com:license" content="X4ZQZ">
    @*@if (ViewBag.isRtl) {
            @Styles.Render("~/Content/css-rtl")
        } else {
            @Styles.Render("~/Content/css")
        }*@


    @*<link href="~/dist/lib/bootstrap@(ViewBag.isRtl ? "-rtl" : "").min.css?v=@typeof(BLL.ApplicationLicense.License).Assembly.GetName().Version" rel="stylesheet" />
        <link href="~/dist/css/dashboard/mian-dash@(ViewBag.isRtl ? "-rtl" : "").css?v=@typeof(BLL.ApplicationLicense.License).Assembly.GetName().Version" rel="stylesheet" />
        <script src="~/dist/lib/jquery-1.11.1.min.js?v=@typeof(BLL.ApplicationLicense.License).Assembly.GetName().Version"></script>
        <script src="~/dist/lib/jquery-ui-1.10.4.custom.min.js?v=@typeof(BLL.ApplicationLicense.License).Assembly.GetName().Version"></script>
        <script src="~/dist/lib/jquery.fileupload.min.js?v=@typeof(BLL.ApplicationLicense.License).Assembly.GetName().Version"></script>
        <script src="~/dist/lib/jquery.gridster.with-extras.min.js?v=@typeof(BLL.ApplicationLicense.License).Assembly.GetName().Version"></script>
        <script src="~/dist/lib/jquery.gridster.with-extras.min2.js?v=@typeof(BLL.ApplicationLicense.License).Assembly.GetName().Version"></script>
        <script src="~/dist/lib/jquery.ui.widget.min.js?v=@typeof(BLL.ApplicationLicense.License).Assembly.GetName().Version"></script>

        @if (!Boolean.Parse(System.Configuration.ConfigurationManager.AppSettings["releaseMode"] ?? "true")) {
            <script src="~/dist/lib/angular.js?v=@typeof(BLL.ApplicationLicense.License).Assembly.GetName().Version"></script>
        } else {
            <script src="~/dist/lib/angular.min.js?v=@typeof(BLL.ApplicationLicense.License).Assembly.GetName().Version"></script>
        }

        <script src="~/dist/lib/angular-messages.min.js?v=@typeof(BLL.ApplicationLicense.License).Assembly.GetName().Version"></script>
        <script src="~/dist/lib/angular-sanitize.min.js?v=@typeof(BLL.ApplicationLicense.License).Assembly.GetName().Version"></script>
        <script src="~/dist/lib/angular-translate.min.js?v=@typeof(BLL.ApplicationLicense.License).Assembly.GetName().Version"></script>
        <script src="~/dist/lib/angular-translate-loader-static-files.min.js?v=@typeof(BLL.ApplicationLicense.License).Assembly.GetName().Version"></script>

        <script src="~/dist/lib/angular-animate.min.js?v=@typeof(BLL.ApplicationLicense.License).Assembly.GetName().Version"></script>
        <script src="~/dist/lib/angular-route.min.js?v=@typeof(BLL.ApplicationLicense.License).Assembly.GetName().Version"></script>
        <script src="~/dist/lib/bootstrap-datepicker.fa.min.js?v=@typeof(BLL.ApplicationLicense.License).Assembly.GetName().Version"></script>
        <script src="~/dist/lib/bootstrap-datepicker.min.js?v=@typeof(BLL.ApplicationLicense.License).Assembly.GetName().Version"></script>
        <script src="~/dist/lib/bootstrap-select.min.js?v=@typeof(BLL.ApplicationLicense.License).Assembly.GetName().Version"></script>

        @if (ViewBag.isRtl) {
            <script src="~/dist/lib/bootstrap-select-defaults-fa_IR.js?v=@typeof(BLL.ApplicationLicense.License).Assembly.GetName().Version"></script>
        } else {
            <script src="~/dist/lib/bootstrap-select-defaults-en_US.js?v=@typeof(BLL.ApplicationLicense.License).Assembly.GetName().Version"></script>
        }


        <script src="~/dist/lib/bootstrap.min.js?v=@typeof(BLL.ApplicationLicense.License).Assembly.GetName().Version"></script>
        <script src="~/dist/lib/d3.v3.min.js?v=@typeof(BLL.ApplicationLicense.License).Assembly.GetName().Version"></script>
        <script src="~/dist/lib/sortable.min.js?v=@typeof(BLL.ApplicationLicense.License).Assembly.GetName().Version"></script>
        <script src="~/dist/lib/topojson.min.js?v=@typeof(BLL.ApplicationLicense.License).Assembly.GetName().Version"></script>
        <script src="~/dist/lib/lodash.min.js?v=@typeof(BLL.ApplicationLicense.License).Assembly.GetName().Version"></script>
        <script src="~/dist/lib/jquery.treeview.js?v=@typeof(BLL.ApplicationLicense.License).Assembly.GetName().Version"></script>*@
    
    @*<link href="~/dist/css/dash-all@(ViewBag.isRtl ? "-rtl" : "").css?v=@typeof(BLL.ApplicationLicense.License).Assembly.GetName().Version" rel="stylesheet" />
        <script src="~/dist/js/lib-all.js?v=@typeof(BLL.ApplicationLicense.License).Assembly.GetName().Version"></script>*@
    
    @{
        var v = typeof(BLL.ApplicationLicense.License).Assembly.GetName().Version.ToString();
    }
    <link href="~/react-dist/styles.css?v=@v" rel="stylesheet" />
    <script src="~/react-dist/app-bundle.js?v=@v"></script>


    <style>
        [ng\:cloak], [ng-cloak], [data-ng-cloak], [x-ng-cloak], .ng-cloak, .x-ng-cloak, .ng-hide {
            display: none !important;
        }
    </style>

</head>
<body>
    @RenderBody()

    <script>
        $(document).ready(function () {
            //    $("#divAjaxErr").createModal({
            //        id: "divAjaxErrModal",
            //        title: "خطا",
            //        body: '<div>مشکلی در روند اجرای برنامه به وجود آمده است. برای اطلاعات بیشتر با مدیر سیستم تماس بگیرید.</div>\
            //				<br><a  data-toggle="collapse" class="pointer"  hrefx="#error-detail" onclick="javascript:$(\'#error-detail\').collapse(\'toggle\')" ><span data-trans-key="مشاهده جزییات"> </span></a>\
            //			<div id="error-detail" style="direction:ltr" class="panel-collapse collapse "></div>',
            //        okText: "تایید",
            //        okClass: "btn-primary",
            //    });

            $.ajaxSetup({
                cache: false,
                error: function (x, e) {
                    if (!x) return;
                    if (x.status == 0) {
                        tit = ' Check Your Network';
                    }
                    else if (x.status == 404) {
                        tit = 'Requested URL not found';

                    } else if (x.status == 500) {
                        tit = 'Internel Server Error';
                    } else {
                        tit = 'Unknow Error';
                    }
                    if (!x.responseText) return;

                    var txt = x.responseText.replace(/<style[^>]*>[\s\S]*<\/style>/im, "");
                    $("#divAjaxErr  #error-detail").html(txt);
                    $("#divAjaxErrModal").modal("show");
                }
            });
        });

    </script>


    <script>
        
        var app = app || {};

        @*app.urlPrefix = "@Url.Action("Index", "Charts", new { area = "Moderation" })".replace(/Moderation.*/g, "");
        app.aboluteUrl = "@Request.Url.AbsoluteUri";
        app.setUrlPrefix("@Url.Action("Index", "Charts", new { area = "Moderation" })");*@

        app.urlPrefix = "@Url.Action("management", "sadaf")".replace(/sadaf\/management.*/g, "");
        app.aboluteUrl = "@Request.Url.AbsoluteUri";
        @*app.setUrlPrefix("@Url.Action("management", "sadaf")".replace(/sadaf\/management.*/g, ""));
        app.setAboluteUrl("@Request.Url.AbsoluteUri");*@



        app.version = "@typeof(BLL.ApplicationLicense.License).Assembly.GetName().Version";

        var hash = "@ViewBag.returnUrlHash";
        if (hash) {
            location.hash = hash;
        }
        console.log('ViewBag.lang', @ViewBag.lang);
        app.lang.setLangTyle(@ViewBag.lang);
        app.lang.setLang();
        app.version = '@(Boolean.Parse(System.Configuration.ConfigurationManager.AppSettings["releaseMode"] ?? "true")
            ? (DateTime.Now - DateTime.MinValue).TotalMilliseconds.ToString()
            : typeof(BLL.ApplicationLicense.License).Assembly.GetName().Version.ToString())';


    </script>
</body>
</html>
