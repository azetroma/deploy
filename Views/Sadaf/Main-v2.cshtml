@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    
    <base href="@Href("~")">
    <title>@ViewBag.Title</title>
    <link href="~/favicon.ico" rel="shortcut icon" type="image/x-icon" />
    <meta name="viewport" content="width=device-width" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />

    @{
        var isRelease = Boolean.Parse(System.Configuration.ConfigurationManager.AppSettings["releaseMode"] ?? "true");
        var v = typeof(BLL.ApplicationLicense.License).Assembly.GetName().Version.ToString();
        var version = typeof(BLL.ApplicationLicense.License).Assembly.GetName().Version;
        if (!isRelease) {
            v = (DateTime.Now - DateTime.MinValue).TotalMilliseconds.ToString();
        }

    }

    <link href="~/react-dist/styles.css?v=@v" rel="stylesheet" />


    <style>
        [ng\:cloak], [ng-cloak], [data-ng-cloak], [x-ng-cloak], .ng-cloak, .x-ng-cloak, .ng-hide {
            display: none !important;
        }

        html {
            background: #eceff1;
        }
    </style>

    @if (ViewBag.theme != null) {
        var theme = (BLL.Process.ThemeModel)ViewBag.theme;
        <style>
            @Html.Raw(theme.extraCss)
        </style>
    }


    <meta name="fontiran.com:license" content="X4ZQZ">

</head>
<body ng-app="sadafMain" xng-cloak xng-controller="dashboardMainPageCtrl" class="theme2" style="overflow-y:scroll;height: auto;">
    @*@Html.AntiForgeryToken()*@
    <input type="hidden" name="anti-forgery-name" value="@ViewBag.AntiforgeryName" />
    <input type="hidden" name="@ViewBag.AntiforgeryName" value="@ViewBag.Antiforgery" />

    <input type="hidden" value="@ViewBag.lang" id="lang" />
    <input type="hidden" id="isFullscreen" value="@ViewBag.UserProfile.IsFullScreen" />
    <input type="hidden" id="defaultId" value="@ViewBag.defaultId" />
    <input type="hidden" id="appId" value="@ViewBag.appId" />
    <input type="hidden" value="@System.Text.RegularExpressions.Regex.Replace( Url.Action("management", "sadaf").ToString().ToLower(), "sadaf/management.*", "")" name="baseUrl" />
    <input type="hidden" value="@Request.Url.AbsoluteUri" name="aboluteUrl" />
    <input type="hidden" value="@v" name="version" />
    <input type="hidden" value="@ViewBag.isRtl" name="isRtl" />
    <input type="hidden" value="@(Url.Action("main", "sadaf") + "/")" name="hashUrlPrefix" />
    <input type="hidden" value="@(Html.Raw(ViewBag.license).ToString().Replace("\"","\\\""))" name="license" />

    <div>
        <div class="ui fluid container">
            <ng-view style="display:block;"></ng-view>
        </div>
    </div>


    <script src="~/react-dist/app-bundle.js?v=@v"></script>
    <script src="~/react-dist/bundle.js?v=@ViewBag.customChartVersion"></script>

    <script>




        var hash = "@ViewBag.returnUrlHash";
        if (hash) {
            location.hash = hash;
        }

         @{
             var user = BLL.Security.Users.getUserByUsername(User.Identity.Name);

             <text>

        @*app.userInfo = {
            name: '@user.FirstName @user.LastName',
            id:@user.Id,
        }*@

             </text>
          }

    </script>

    <script>

        window.addEventListener('message', function (e) {
            if (!_.isString(e.data)) return;

            try {
                var message = JSON.parse(e.data);
                var $el = $('[ng-controller=dashboardPageCtrl]');
                var scope = angular.element($el).scope();
                scope.iframeService.handleMessage(message);
                scope.$apply();
            } catch (e) {
            }

        });

    </script>

    @*Clickjacking Defense*@
    <style id="antiClickjack">
        body {
            display: none !important;
        }
    </style>

    <script type="text/javascript">
        if (self === top) {
            var antiClickjack = document.getElementById("antiClickjack");
            antiClickjack.parentNode.removeChild(antiClickjack);
        } else {
            top.location = self.location;
        }
    </script>

</body>

</html>
