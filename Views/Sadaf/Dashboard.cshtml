@{
    Layout = null;
}
<!DOCTYPE html>
<html style="background-color:#eceff1!important;">
<head>
    <meta charset="utf-8" />
    <base href="@Href("~")">
    <title>@ViewBag.Title</title>
    <link href="~/favicon.ico" rel="shortcut icon" type="image/x-icon" />
    <meta name="viewport" content="width=device-width" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />

    @{
        var isRelease = bool.Parse(System.Configuration.ConfigurationManager.AppSettings["releaseMode"] ?? "true");
        var v = typeof(BLL.ApplicationLicense.License).Assembly.GetName().Version.ToString();
        var version = typeof(BLL.ApplicationLicense.License).Assembly.GetName().Version;
        if (!isRelease) {
            v = (DateTime.Now - DateTime.MinValue).TotalMilliseconds.ToString();
        }

    }

    <link href="~/dist/css/dash-all@(ViewBag.isRtl ? "-rtl" : "").css?v=@v" rel="stylesheet" />


    <style>
        [ng\:cloak], [ng-cloak], [data-ng-cloak], [x-ng-cloak], .ng-cloak, .x-ng-cloak, .ng-hide {
            display: none !important;
        }

        /* max-height - the only parameter in this file that needs to be edited.
        * Change it to suit your needs. The rest is recommended to leave as is.
        */
        /*.clusterize-scroll {
                   max-height: 200px;
                   overflow: auto;
               }*/

        /**
        * Avoid vertical margins for extra tags
        * Necessary for correct calculations when rows have nonzero vertical margins
        */
        .clusterize-extra-row {
            margin-top: 0 !important;
            margin-bottom: 0 !important;
        }

            /* By default extra tag .clusterize-keep-parity added to keep parity of rows.
        * Useful when used :nth-child(even/odd)
        */
            .clusterize-extra-row.clusterize-keep-parity {
                display: none;
            }

        /* During initialization clusterize adds tabindex to force the browser to keep focus
        * on the scrolling list, see issue #11
        * Outline removes default browser's borders for focused elements.
        */
        .clusterize-content {
            outline: 0;
        }

        /* Centering message that appears when no data provided
        */
        .clusterize-no-data td {
            text-align: center;
        }
    </style>

    <meta name="fontiran.com:license" content="X4ZQZ">

    @if (ViewBag.theme != null) {
        var theme = (BLL.Process.ThemeModel)ViewBag.theme;
        <style>
            @Html.Raw(theme.extraCss)

            .my-fix::-webkit-scrollbar {
                background-color: darkgrey;
            }
            /*
            .my-fix {
                box-shadow: 0 1px 3px 0 rgba(0,0,0,.2), 0 1px 1px 0 rgba(0,0,0,.14), 0 2px 1px -1px rgba(0,0,0,.12) !important;
            }

            .side-menu-item-parent {
                font-weight: bold;
            }
            */

            .side-menu-item-container.active {
                /*رنگ گروه منوی فعال*/
                background-color: @theme.menuActiveGroupBackColor;
            }


            .ui.inverted.segment, .ui.primary.inverted.segment {
                /*رنگ پشت منوی سمت راست*/
                background-color: @theme.menuBackColor;
                /*رنگ متن منوی سمت راست
                color: @theme.menuColor;
            */
            }

            .side-menu-item.active {
                /*رنگ خط سمت راست منوی فعال*/
                border-right: 5px solid @theme.menuActiveBorderColor;
                /*color: #ff5722;
                font-weight: bold;
            */
            }

            .side-menu-item {
                color: @theme.menuColor;
            }

                .side-menu-item:hover {
                    /*رنگ منو در حالتی موس روی آن است*/
                    background-color: @theme.menuHoverColor;
                }

            .sadaf-footer a {
                /*رنگ لینک پایین */
                color: @theme.menuColor;
            }

            body.theme2 {
    background-color: @theme.dashboardBackColor !important;
}
        </style>
    }

    @*<style>
            .my-fix::-webkit-scrollbar {
                background-color: darkgrey;
            }

            .my-fix {
                box-shadow: 0 1px 3px 0 rgba(0,0,0,.2), 0 1px 1px 0 rgba(0,0,0,.14), 0 2px 1px -1px rgba(0,0,0,.12) !important;
            }

            .side-menu-item-parent {
                font-weight: bold;
            }

            .side-menu-item-container.active {
                /*رنگ گروه منوی فعال*/
                background-color: #fafafa;
            }

            .ui.inverted.segment, .ui.primary.inverted.segment {
                /*رنگ پشت منوی سمت راست*/
                background-color: #fafafa;
                /*رنگ متن منوی سمت راست*/
                color: #000;
            }

            .side-menu-item.active {
                /*رنگ خط سمت راست منوی فعال*/
                border-right: 5px solid #ff5722;
                font-weight:bold;
                color:#ff5722;
            }
            .side-menu-item {
                color:#333;
            }
            .side-menu-item:hover {
                /*رنگ منو در حالتی موس روی آن است*/
                background-color: #e8e8e8;
            }

            .sadaf-footer a {
                /*رنگ لینک پایین */
                color: #333;
            }
        </style>*@
</head>
<body ng-app="sadaf" ng-cloak ng-controller="dashboardPageCtrl" class="theme2" style="overflow-y: hidden;height: initial;">
    <input type="hidden" value="@ViewBag.lang" id="lang" />
    <input type="hidden" id="isFullscreen" value="true" />

    <input type="hidden" id="dashboardPublishMenuId" value="@ViewBag.MenuId" />
    <input type="hidden" id="appId" value="@ViewBag.appId" />
    <input type="hidden" id="isShared" value="1" />



    <div class="main-container full-height-container" xstyle="height:initial;max-height:initial;overflow-y:initial;">

        <div class="" style="display:flex;flex-direction:row;padding:10px 0 0 10px;flex-wrap: wrap-reverse;justify-content: flex-end;">

            <div ng-show="menuCategories.licenceRemain.remain <= 3" class="ui label red">
                تعداد روز باقیمانده از جواز استفاده:
                <b style="text-decoration:underline;">{{persian(menuCategories.licenceRemain.remain, isPersian)}}</b> روز
            </div>

            <div class="" id="filter-box" ng-app="filterBox" style="transition:width 0.4s ease; flex:1 1 auto;">
                <div ng-controller="filterBoxController" id="filter-box-controller">

                    <div ng-if="otherFilters.length + userControlFilter.length >1"
                         class="ui label"
                         title="{{'clear'| translate}}">
                        <a ng-click="clearAll()" class="pointer"><b>{{'clear all'| translate}}</b></a>
                    </div>


                    <div ng-repeat="j in otherFilters | filter:{value:''}"
                         class="ui label"
                         title="{{j.valueCaption}}">
                        <b>{{j.keyCaption}}: </b>{{getCleanValue(j.valueCaption)}}
                        <i class="delete icon" ng-click="removeDrillDown($index)"></i>
                    </div>



                    <div ng-repeat="i in userControlFilter "
                         ng-if="i.values && i.values.length"
                         class="ui label"
                         title="{{i.values.join(', ')}}">
                        <b>{{i.key}}: </b>{{i.xCaption}} <span ng-bind-html="i.Caption"></span>
                        <i class="delete icon" ng-hide="i.disableClear" ng-click="removeUserControl($index)"></i>
                    </div>
                </div>

            </div>


        </div>

        <ng-view></ng-view>

    </div>

    <div id="form-holder">
        <sadaf-form id="{{formId}}" row-id="{{rowId}}" on-cancel="hideForm()" on-finish="hideForm()" settings="formSettings"></sadaf-form>
    </div>

    <div class="ui modal small" id="filter-member-dialog">
        <i class="close icon"></i>
        <div class="header">
            فیلتر کردن مقادیر
        </div>
        <div class="content">
            <div id="filter-member-dialog-content">
                <div class="ui active inverted dimmer">
                    <div class="ui text loader">در حال بارگذاری</div>
                </div>
            </div>

        </div>
        <div class="actions">
            <div class="ui button deny black">{{'انصراف' | translate}}</div>
            <div class="ui button green" onclick="app.helper.filterMemberDialogOk()">انتخاب</div>
        </div>
    </div>

    <div class="ui modal small" id="change-pass">
        <div class="header">
            پیام
        </div>
        <div class="content">
            به دلایل امنیتی لازم است کلمه عبور شما تغییر پیدا کند. لطفا به صفحه تغییر کلمه عبور بروید.

        </div>
        <div class="actions">
            <a class="ui button green" href="~/Profile/#/changepass">تغییر کلمه عبور</a>
        </div>
    </div>

    <div class="ui modal small" id="input-comments">
        <i class="close icon"></i>
        <div class="header">
            کامنت
        </div>
        <div class="content">
            <div class="ui form">
                <div class="field">
                    <label>کامنت</label>
                    <input ng-model="comment.value" type="text" class="" placeholder="">
                </div>
            </div>
            <div class="alert alert-danger" ng-show="comment.error">
                <div ng-show="comment.error.title">
                    <b>{{comment.error.title}}</b>
                    <p>{{comment.error.desc}}</p>
                </div>
            </div>

        </div>
        <div class="actions">
            <div class="ui button deny black">{{'انصراف' | translate}}</div>
            <div class="ui button green" ng-class="{disabled: modal.inProgress, loading : modal.inProgress}" ng-click="comment.ok()">{{modal.btnText}}</div>
        </div>
    </div>

    <script src="~/dist/js/lib-all.js?v=@v"></script>
    @if (!Boolean.Parse(System.Configuration.ConfigurationManager.AppSettings["releaseMode"] ?? "true")) {

        <script src="~/src/js/charts/su.ChartCommons.js?v=@v"></script>
        <script src="~/src/js/charts/su.d3-utils.js?v=@v"></script>
        <script src="~/src/js/charts/su.filterMemberDialog.js?v=@v"></script>
        <script src="~/src/js/charts/su.jquery.sit.BarChart.js?v=@v"></script>
        <script src="~/src/js/charts/jquery.sit.Chart.js?v=@v"></script>
        <script src="~/src/js/charts/su.jquery.sit.Gauge.js?v=@v"></script>
        <script src="~/src/js/charts/jquery.sit.Map.js?v=@v"></script>
        <script src="~/src/js/charts/jquery.sit.PieChart.js?v=@v"></script>
        <script src="~/src/js/charts/jquery.sit.Radar.js?v=@v"></script>
        <script src="~/src/js/charts/su.jquery.sit.Table.js?v=@v"></script>
        <script src="~/src/js/charts/su.jquery.sit.Tree.js?v=@v"></script>
        <script src="~/src/js/charts/jquery.sit.Text.js?v=@v"></script>
        <script src="~/src/js/charts/su.jquery.sit.UserControl.js?v=@v"></script>
        <script src="~/src/js/charts/tipsy.js?v=@v"></script>

        foreach (var f in Directory.GetFiles(Server.MapPath("~/src/js/charts/newCharts"))) {
            if (Path.GetExtension(f) == ".js") {
                <text>
                    <script src="~/src/js/charts/newCharts/@Path.GetFileName(f)?v=@v"></script>
                </text>
            }
        }

        <script src="~/src/js/dashboardPage/notification.js?v=@v"></script>
        <script src="~/src/js/management/services/services-app.js?v=@v"></script>
        <script src="~/src/js/management/services/datasources.js?v=@v"></script>
        <script src="~/src/js/forms/forms-app.js?v=@v"></script>
        <script src="~/src/js/forms/editor/form-generator-editor.js?v=@v"></script>
        <script src="~/src/js/forms/render-form.js?v=@v"></script>
        <script src="~/src/js/dashboardPage/navbar/navbar.js?v=@v"></script>
        <script src="~/src/js/collapse.js?v=@v"></script>
        <script src="~/src/js/dashboard-app.js?v=@v"></script>
        <script src="~/src/js/heartBeat.js?v=@v"></script>
        <script src="~/src/js/dashboardPage/filterBox.js?v=@v"></script>
        <script src="~/src/js/dashboardPage/su.DashboardPageUtils.js?v=@v"></script>
        <script src="~/src/js/dashboardPage/su.dashboardLayout.js?v=@v"></script>
        <script src="~/src/js/dashboardPage/su.dashboardPage.js?v=@v"></script>
        <script src="~/src/js/dashboardPage/su.app.js?v=@v"></script>
        <script src="~/src/js/dashboardPage/bootstrap.sit.helper.js?v=@v"></script>
        <script src="~/src/js/dashboardPage/globalVariableHelper.js?v=@v"></script>
        <script src="~/src/js/dashboardPage/su.packages.js?v=@v"></script>
        <script src="~/src/js/dashboardPage/JqueryHelper.js?v=@v"></script>


    } else {
        <script src="~/dist/js/dashboard-all.js?v=@v"></script>

        @*<script src="~/dist/js/charts-theme2.js?v=@v"></script>
            <script src="~/dist/js/services.js?v=@v"></script>
            <script src="~/dist/js/forms-app.js?v=@v"></script>
            <script src="~/dist/js/dashboard-app-theme2.js?v=@v"></script>*@
    }


    @if (ViewBag.cdn.enable) {
        for (int i = 0; i < ViewBag.cdn.items.Count; i++) {
            if (ViewBag.cdn.items[i].type == 1) {
                <script src="@ViewBag.cdn.items[i].link"></script>
            }
            if (ViewBag.cdn.items[i].type == 0) {
                <link href="@ViewBag.cdn.items[i].link" rel="stylesheet" />
            }
        }
    }


    <script src="~/react-dist/customCharts.js?v=@ViewBag.customChartVersion"></script>
    <link href="~/react-dist/customCharts.css?v=@ViewBag.customChartVersion" rel="stylesheet" />

    <script>
        dashboard.mode = 'auto';
        var userVariable = @Html.Raw(Json.Encode(ViewBag.userVariable));
        if(_.isArray(userVariable)){
            localStorage.setItem('userVariable',JSON.stringify( userVariable));
        }

        $('.ui.dropdown').dropdown();
        $('.ui.checkbox').checkbox();
        //$('.ui.modal').modal();

        var app = app || {};
        app.useEnglishDigit = JSON.parse("@((ViewBag.englishDigit ?? false ).ToString().ToLower())");
        app.shareMode = true;
        // app.urlPrefix = "@Url.Action("Index", "Charts", new { area = "Moderation" })".replace(/Moderation.*/g, "");
        // app.aboluteUrl = "@Request.Url.AbsoluteUri";
        // app.version = "@v";
        // app.setUrlPrefix("@Url.Action("Index", "Charts", new { area = "Moderation" })");
        // app.setAboluteUrl("@Request.Url.AbsoluteUri");
        // app.userId = user.Id;


        app.urlPrefix = "@Url.Action("management", "sadaf")".replace(/sadaf\/management.*/g, "");
        app.aboluteUrl = "@Request.Url.AbsoluteUri";
        app.setUrlPrefix("@Url.Action("management", "sadaf")".replace(/sadaf\/management.*/g, ""));
        app.version = "@v";


        var hash = "@ViewBag.returnUrlHash";
        if (hash) {
            location.hash = hash;
        }
        app.lang.setLangTyle(@ViewBag.lang);

        app.lang.setLang();
        app.version = '@(Boolean.Parse(System.Configuration.ConfigurationManager.AppSettings["releaseMode"] ?? "true")
            ? (DateTime.Now - DateTime.MinValue).TotalMilliseconds.ToString() : v.ToString())';

        //TODO add to core
        $.ajaxSetup({
            beforeSend: function (xhr) {
                var key = _.last(window.location.pathname.split('/'));
                xhr.setRequestHeader("key", key);
            }
        });

    </script>

    <script>
            //iframe communication
           // var $el = $('[ng-controller=dashboardPageCtrl]');
           // window.addEventListener('message', function (e) {
           //     if (!_.isString(e.data)) return;
           //
           //     var message = JSON.parse(e.data);
           //
           //     var scope = angular.element($el).scope();
           //     scope.iframeService.handleMessage(message);
           //     scope.$apply();
           // });

    </script>

    @*Clickjacking Defense*@
    @*<style id="antiClickjack">
            body {
                display: none !important;
            }
        </style>

        <script type="text/javascript">
            if (self === top) {
                var antiClickjack = document.getElementById("antiClickjack");
                antiClickjack.parentNode.removeChild(antiClickjack);
            } else {
                top.location = self.location;
            }
        </script>*@
</body>

</html>
